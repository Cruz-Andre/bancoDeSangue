/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.HospitalVO;
import servicos.HospitalServicos;
import servicos.ServicosFactory;

/**
 *
 * @author cruza
 */
public class GUIManutencaoHospital extends javax.swing.JInternalFrame {
    
    /**
     * Creates new form GUIEstoqueBS
     */
    public GUIManutencaoHospital() {
        initComponents();
        preecherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTInfosHospital = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jbtnPreencherTabela = new javax.swing.JButton();
        jbtnPreencherCampos = new javax.swing.JButton();
        jbtnDeletar = new javax.swing.JButton();
        jbtnAtualizar = new javax.swing.JButton();
        jtfNomeHosp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfAMais = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfAMenos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfBMais = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfBMenos = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfABMais = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfABMenos = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtfOMais = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtfOMenos = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtfPesquisaNomeHosp = new javax.swing.JTextField();
        jbrnLimparTabela = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Manutenção Hospital");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(900, 600));

        jTInfosHospital.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTInfosHospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Instituição Hospitalar", "Sangue A+", "Sangue A-", "Sangue B+", "Sangue B-", "Sangue AB+", "Sangue AB-", "Sangue O+", "Sangue O-"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTInfosHospital.setAlignmentX(0.0F);
        jTInfosHospital.setAlignmentY(0.0F);
        jTInfosHospital.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTInfosHospital.setName(""); // NOI18N
        jTInfosHospital.setRowHeight(30);
        jTInfosHospital.setRowMargin(1);
        jTInfosHospital.setShowGrid(true);
        jTInfosHospital.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTInfosHospital);
        if (jTInfosHospital.getColumnModel().getColumnCount() > 0) {
            jTInfosHospital.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTInfosHospital.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        jLabel1.setText("Instituição Hospitalar");

        jbtnPreencherTabela.setText("Preencher Tabela");
        jbtnPreencherTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPreencherTabelaActionPerformed(evt);
            }
        });

        jbtnPreencherCampos.setText("Preencher Campos");
        jbtnPreencherCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPreencherCamposActionPerformed(evt);
            }
        });

        jbtnDeletar.setText("Deletar dados da linha selecionada");
        jbtnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeletarActionPerformed(evt);
            }
        });

        jbtnAtualizar.setText("Atualizar");
        jbtnAtualizar.setEnabled(false);
        jbtnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAtualizarActionPerformed(evt);
            }
        });

        jtfNomeHosp.setEnabled(false);

        jLabel2.setText("Sangue A+");

        jtfAMais.setEnabled(false);

        jLabel3.setText("Sangue A-");

        jtfAMenos.setEnabled(false);

        jLabel4.setText("Sangue B+");

        jtfBMais.setEnabled(false);

        jLabel5.setText("Sangue B-");

        jtfBMenos.setEnabled(false);

        jLabel6.setText("Sangue AB+");

        jtfABMais.setEnabled(false);

        jLabel7.setText("Sangue AB-");

        jtfABMenos.setEnabled(false);

        jLabel8.setText("Sangue O+");

        jtfOMais.setEnabled(false);

        jLabel9.setText("Sangue O-");

        jtfOMenos.setEnabled(false);

        jLabel10.setText("Código");

        jtfCodigo.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Pesquisar nome da Instituição Hospitalar");

        jtfPesquisaNomeHosp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPesquisaNomeHospKeyReleased(evt);
            }
        });

        jbrnLimparTabela.setText("Limpar Tabela");
        jbrnLimparTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbrnLimparTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtfCodigo)
                                    .addGap(18, 18, 18))
                                .addComponent(jbtnPreencherCampos))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfABMais, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfABMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfOMais, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfOMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfAMais, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfAMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfBMais, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtfBMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(40, 40, 40)
                                    .addComponent(jbtnAtualizar))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtfNomeHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfPesquisaNomeHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnPreencherTabela)
                        .addGap(18, 18, 18)
                        .addComponent(jbrnLimparTabela)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnDeletar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jtfPesquisaNomeHosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnPreencherTabela)
                    .addComponent(jbtnDeletar)
                    .addComponent(jbrnLimparTabela))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jbtnPreencherCampos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNomeHosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtfAMais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jtfAMenos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jtfBMais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jtfBMenos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jtfABMenos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jtfOMais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jtfOMenos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jtfABMais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbtnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void preecherTabela() {
        try {
            HospitalServicos hs = ServicosFactory.getHospitalServicos();

            DefaultTableModel dtm = (DefaultTableModel) jTInfosHospital.getModel();
            dtm.setRowCount(0);

            ArrayList<HospitalVO> infoHosp = new ArrayList<>();

            infoHosp = hs.buscarInfoHospital();

            for (int i = 0; i < infoHosp.size(); i++) {
                dtm.addRow(new String[]{
                    String.valueOf(infoHosp.get(i).getIdHosp()),
                    String.valueOf(infoHosp.get(i).getNomeHosp()),
                    String.valueOf(infoHosp.get(i).getQtdSangueAMais()),
                    String.valueOf(infoHosp.get(i).getQtdSangueAMenos()),
                    String.valueOf(infoHosp.get(i).getQtdSangueBMais()),
                    String.valueOf(infoHosp.get(i).getQtdSangueBMenos()),
                    String.valueOf(infoHosp.get(i).getQtdSangueABMais()),
                    String.valueOf(infoHosp.get(i).getQtdSangueABMenos()),
                    String.valueOf(infoHosp.get(i).getQtdSangueOMais()),
                    String.valueOf(infoHosp.get(i).getQtdSangueOMenos()),});
            }
            //Adicionando o modelo de tabela com os dados na Tabela jtMostrarProdutos
            jTInfosHospital.setModel(dtm);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro! GUIManutencaoHospital.preencherTabela " + e.getMessage());
        }
    }

    private void pesquisarHospital() {
        try {
            if (jtfPesquisaNomeHosp.getText().isEmpty()) {
                preecherTabela();
            } else {
                HospitalServicos hs = ServicosFactory.getHospitalServicos();
                DefaultTableModel dtm = (DefaultTableModel) jTInfosHospital.getModel();
                dtm.setRowCount(0);

                String sqlQuery = " where nomeHosp like '%" + jtfPesquisaNomeHosp.getText() + "%'";

                ArrayList<HospitalVO> hospPesquisado = new ArrayList<>();

                hospPesquisado = hs.pesquisarHospital(sqlQuery);

                for (int i = 0; i < hospPesquisado.size(); i++) {
                    dtm.addRow(new String[]{
                        String.valueOf(hospPesquisado.get(i).getIdHosp()),
                        String.valueOf(hospPesquisado.get(i).getNomeHosp()),
                        String.valueOf(hospPesquisado.get(i).getQtdSangueAMais()),
                        String.valueOf(hospPesquisado.get(i).getQtdSangueAMenos()),
                        String.valueOf(hospPesquisado.get(i).getQtdSangueBMais()),
                        String.valueOf(hospPesquisado.get(i).getQtdSangueBMenos()),
                        String.valueOf(hospPesquisado.get(i).getQtdSangueABMais()),
                        String.valueOf(hospPesquisado.get(i).getQtdSangueABMenos()),
                        String.valueOf(hospPesquisado.get(i).getQtdSangueOMais()),
                        String.valueOf(hospPesquisado.get(i).getQtdSangueOMenos()),});
                }

                //Adicionando o modelo de tabela com os dados na Tabela jtMostrarProdutos
                jTInfosHospital.setModel(dtm);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao pesquisar Hospital! GUIManutencaoHospital.pesquisarHospital " + e.getMessage());
        }
    }

    private void deletarHospital() {
        try {
            int linha = jTInfosHospital.getSelectedRow();

            if (linha == - 1) {
                JOptionPane.showMessageDialog(this, "Por Favor selecione uma linha! ");

            } else {
                HospitalServicos hs = ServicosFactory.getHospitalServicos();
                String codHospital = (String) jTInfosHospital.getValueAt(linha, 0);
                hs.deletarHospital(Integer.parseInt(codHospital));

                JOptionPane.showMessageDialog(this, "Hospital deletado com sucesso!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao deletar Hospital! GUIManutencaoHospital.deletarHospital " + e.getMessage());
        }
    }

    private void preencherCampos() {
        int linha = jTInfosHospital.getSelectedRow();
        if (linha != - 1) {
            jtfCodigo.setText((String) jTInfosHospital.getValueAt(linha, 0));
            jtfNomeHosp.setText((String) jTInfosHospital.getValueAt(linha, 1));
            jtfAMais.setText((String) jTInfosHospital.getValueAt(linha, 2));
            jtfAMenos.setText((String) jTInfosHospital.getValueAt(linha, 3));
            jtfBMais.setText((String) jTInfosHospital.getValueAt(linha, 4));
            jtfBMenos.setText((String) jTInfosHospital.getValueAt(linha, 5));
            jtfABMais.setText((String) jTInfosHospital.getValueAt(linha, 6));
            jtfABMenos.setText((String) jTInfosHospital.getValueAt(linha, 7));
            jtfOMais.setText((String) jTInfosHospital.getValueAt(linha, 8));
            jtfOMenos.setText((String) jTInfosHospital.getValueAt(linha, 9));
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um valor na tabela!");
        }

        ArrayList<JComponent> habilitarCampos = new ArrayList<>(Arrays.asList(
                jtfNomeHosp, jtfAMais, jtfAMenos, jtfBMais, jtfBMenos, jtfABMais, jtfABMenos,
                jtfOMais, jtfOMenos, jbtnAtualizar
        ));

        for (int i = 0; i < habilitarCampos.size(); i++) {
            habilitarCampos.get(i).setEnabled(true);
        }
    }

    public void atualizarHospital() {
        try {
            HospitalVO hVO = new HospitalVO();
            if (jtfNomeHosp.getText().isEmpty()
                    || jtfAMais.getText().isEmpty() || jtfAMenos.getText().isEmpty()
                    || jtfBMais.getText().isEmpty() || jtfBMenos.getText().isEmpty()
                    || jtfABMais.getText().isEmpty() || jtfABMenos.getText().isEmpty()
                    || jtfOMais.getText().isEmpty() || jtfOMenos.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null,
                        "Não deixe campos vazios!",
                        "Erro",
                        JOptionPane.ERROR_MESSAGE
                );
            } else {
                hVO.setIdHosp(Integer.parseInt(jtfCodigo.getText()));
                hVO.setNomeHosp(jtfNomeHosp.getText());
                hVO.setQtdSangueAMais(Integer.parseInt(jtfAMais.getText()));
                hVO.setQtdSangueAMenos(Integer.parseInt(jtfAMenos.getText()));
                hVO.setQtdSangueBMais(Integer.parseInt(jtfBMais.getText()));
                hVO.setQtdSangueBMenos(Integer.parseInt(jtfBMenos.getText()));
                hVO.setQtdSangueABMais(Integer.parseInt(jtfABMais.getText()));
                hVO.setQtdSangueABMenos(Integer.parseInt(jtfABMenos.getText()));
                hVO.setQtdSangueOMais(Integer.parseInt(jtfOMais.getText()));
                hVO.setQtdSangueOMenos(Integer.parseInt(jtfOMenos.getText()));

                HospitalServicos hs = ServicosFactory.getHospitalServicos();
                hs.atualizarHospital(hVO);

                JOptionPane.showMessageDialog(null, "Hospital atualizado com sucesso! ");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar o Hospital! GUIManutencaoHospital.atualizarHospital " + e.getMessage());
        }
    }
    
    private void limparTabela() {
        /**
         * Para limpar a tabela temos apenas que setar o numero de linhas
         * para ZERO no nosso default table model
         */
        DefaultTableModel dtm = (DefaultTableModel) jTInfosHospital.getModel();
        dtm.setRowCount(0);   
    }

    public void limparCampos() {
        jtfCodigo.setText(null);
        jtfNomeHosp.setText(null);
        jtfAMais.setText(null);
        jtfAMenos.setText(null);
        jtfBMais.setText(null);
        jtfBMenos.setText(null);
        jtfABMais.setText(null);
        jtfABMenos.setText(null);
        jtfOMais.setText(null);
        jtfOMenos.setText(null);
    }


    private void jbtnPreencherTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPreencherTabelaActionPerformed
        // TODO add your handling code here:
        preecherTabela();
    }//GEN-LAST:event_jbtnPreencherTabelaActionPerformed

    private void jbtnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeletarActionPerformed
        // TODO add your handling code here:
        deletarHospital();
        preecherTabela();
    }//GEN-LAST:event_jbtnDeletarActionPerformed

    private void jbtnPreencherCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPreencherCamposActionPerformed
        // TODO add your handling code here:
        preencherCampos();
    }//GEN-LAST:event_jbtnPreencherCamposActionPerformed

    private void jbtnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAtualizarActionPerformed
        // TODO add your handling code here:
        atualizarHospital();
        limparCampos();
        preecherTabela();
    }//GEN-LAST:event_jbtnAtualizarActionPerformed

    private void jtfPesquisaNomeHospKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaNomeHospKeyReleased
        // TODO add your handling code here:
        pesquisarHospital();
    }//GEN-LAST:event_jtfPesquisaNomeHospKeyReleased

    private void jbrnLimparTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbrnLimparTabelaActionPerformed
        // TODO add your handling code here:
        limparTabela();
    }//GEN-LAST:event_jbrnLimparTabelaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTInfosHospital;
    private javax.swing.JButton jbrnLimparTabela;
    private javax.swing.JButton jbtnAtualizar;
    private javax.swing.JButton jbtnDeletar;
    private javax.swing.JButton jbtnPreencherCampos;
    private javax.swing.JButton jbtnPreencherTabela;
    private javax.swing.JTextField jtfABMais;
    private javax.swing.JTextField jtfABMenos;
    private javax.swing.JTextField jtfAMais;
    private javax.swing.JTextField jtfAMenos;
    private javax.swing.JTextField jtfBMais;
    private javax.swing.JTextField jtfBMenos;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfNomeHosp;
    private javax.swing.JTextField jtfOMais;
    private javax.swing.JTextField jtfOMenos;
    private javax.swing.JTextField jtfPesquisaNomeHosp;
    // End of variables declaration//GEN-END:variables
}
